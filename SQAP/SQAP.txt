1. Propósito

El proposito de este documento es definir el Plan de aseguramieno de la calidad del software para el sistema de Venta y Aredamiento de inmuebles, asignación de responsabilidades y tareas del SQA, definir los documentos, guias y hrramientas aa los reportes del SQA.

    1.1 alcance
    
        Este documento establece todas la actividades del SQAP a ser realizadas mientras este en funcionamiento el sistema de Vneta y Arrendamiento de inmuebles(SVA).Con el se busca verificar que todo el software y documentación cumpla con lo requerimientos establecidos. En el presente documento se hara referencias al proyecto en desarrollo como "El proyecto".
        
    1.2 Vista general del sistema
    
        El sistema de venta y arrendamiento de inmuebles esta enfocado a mejorar a experiencia del cliente a la hora de adquirir un inmueble.
        
2. Referencias

    Vease sección 4.2.

3. Gestión
    3.1 Organización

        La organización El poyecto se decribe en detalle en al documento correspodiente, descrito en la sección 4.2, SPMP. Ahí se encontrará dónde se encuentra ubicada el area de aseguramiento de la calidad en la estructura completa del proyecto.

        El área de aseguramiento de la calidad en El proyecto contará con un ingeniero de calidad lider (El lider de calidad). El lider de calidad supervisará que todas las tareas relacionadas con esta área, descritas en la sección 3.2, se realicen correctamente. En este documento las tareas se separan en dos categorias: 
            - Tareas internas: tareas a realizar por el equipo de desarrollo.
            - Tareas externas: tareas a realizar por el equipo de QA.

    3.2 Tareas

        Tareas externas:
            - Mantener y revisar el cumplimiento de estandares de este documento.
            - Mantener y revisar el cumplimiento de estandares, definidos en este y en los documentos mencionados en la sección 4.2, de la documentación correspondiente a cada uno de los artefactos de El proyecto.
            - Gestionar las reuniones externas y interdepartamentales.
            - Gestionar las revisiones y auditorias descritas en la sección 6 de este documento.
            - Destionar la prioridad de los defectos y mejoras de El proyecto.
            - Mantener al día al equipo de desarrollo de las actividades partinentes del equipo de pruebas.
            - Definir y mantener los canales y estandares de cominicación entre el equipo de desarrollo y pruebas.
            - Recolectar las metricas establecidas en la sección 5.

        Tareas internas:
            - Mantener el desarrollo de software apegado a los estandares establecidos (sección 5), de manera individual.
            - Restringir la comuncación con el equipo de pruebas, relacionada a El proyecto, a los canales definidos.
            - Participar en las revisiones y auditorias.
            - Mantener y apegarse a la normalización de las bases de datos.

    3.3 Responsabilidades

        Durante toda la duración de El proyecto el designado como lider de aseguramiento de la calidad será el responsable de que las todas las tareas descritas en la sección 3.2 sean llevadas a cabo. Velar que las metricas se encuentren dentro de los rangos establecidos en este documento.

        Los lideres de cada área del proyecto son responsables, dentro de sus respectivas áreas, de que se cumplan los lineamientos establecidos para el aseguramiento de la calidad. De igual manera es su responsabilidad que se recolecten las metricas.

        Cada miembro del equipo de desarrollo es responsable de que los artefactos producidos por el o ella cumplan con los estandares de calidad definidos en este documento.

    3.4 Estimación de recursos QA
        Durante todo El proyecto se contará con un ingeniero de calidad a medio tiempo lider de aseguramiento de la calidad.

        Durante la primera parte de El proyecto se contará con un ingeniero a tiempo completo.
    
        Durante la segunda parte de El proyecto se contará con tres ingenieros a tiempo completo.

        Durante la tercera parte de El proyecto se contará con dos ingenieros a tiempo completo.

        Durante la cuarta parte de El proyecto se contará con un ingeniero a tiempo completo.
        
4. Documentación

    4.1 Propósito
        El propósito de esta sección es identificar la documentación que será usadad para el aseguramiento de la calidad.

    4.2 Requerimientos mínimos de documentación

        A continuación se listan los documentos producidos. Las siglas usadas para cada documento harán referencia al nombre del documento en ingles.

        - Plan de aseguramiento de la calidad del software (Software Quality Assurance Plan).
        - Plan de la gestión de la configuración del software (SCMP).
        - Plan de la gestión del proyecto de software (SPMP).
        - Especificación de requerimientos del software (SRS).
        - Documento de diseño del software (SDD).
        - Documentación de pruebas del software (STD).
        - Plan de mantenimiento.
        - Plan de verificación y validación (VP).
    
    4.3 Otros

        <<Intencionalmente dejado en blanco>>

5. Estandares, prácticas, conveciones y metricas

    5.1 Propósito

        En esta sección se describen todos los estandares, practicas, convenciones y metricas usados en El proyecto. Estos parametros no solo están relacionados con el aseguramiento de la calidad sino que tambien se tomaran para estudiar el proyecto mismo con el fin de mejorar para futuros proyectos de la compañía y que está adquiera una mayor madurez en el desarrollo.

    5.2 Contenido

        Estandares:

            - Documentación, ISO 9001:2008
            - Estandar de diseño en UML, UML 2.5
            - Estandar de pruebas unitarias, el espeficicado en "Software Engineering: Modern Approaches, Second Edition".

        Prácticas:

            - El software en desarrollo debe ser debidamente probado antes de ser pasado a pruebas, por los desarrolladores. Siempre que sea posible deben de aplicarse pruebas unitarias con triangulación.
            - El software siempre debe de ser evaluado y validado por el equipo de pruebas. En caso de encontrarse defectos en el producto este debe de ser devuelto al equipo de desarrollo con su debido tiquete y nivel de prioridad.
            - Todos los artefactos del proyecto deben ser almacenados en donde se especifica en el SCMP. Esto para asegurar la disponibilidad de los artefactos concistemente con los permisos de acceso de los miembros del equipo de desarrollo. 

        Convenciones:

            - Estandar de codificacion en Rust y C++, MISRA C++2008
            - Estandar de codificacion en Python, PEP 8.

        Métricas:

            - Tiempo medio de entrega, intervalo medio de tiempo entre entrega de requerimientos al equipo de desarrollo y su despliegue a producción.
            - Tiempo medio de correcion de errores en producción, intervalo de tiempo medio entre creación de ticket de un defecto de software y su corrección.
            - Días de actividad, cantidad de días en los que desarrollador emplea desarrollando software.
            - Eficiencia, cantidad de líneas de código en producción de cada desarrolladores.
            - Cambio de código, cantidad de líneas de código moficadas, borradas o agregadas al código despues de pasarse la primera vez a pruebas.
            - ACR, número de fallas / número de veces de uso de la aplicación.

6. Revisiones y auditorias

    6.1 Proposito
    
        El proposito de las revisiones y auditorias es mantener la atención de los ingenieros enfocada en la calidad de la aplicación.Las revisiones son realizadas de manera progrmada mientras que las auditorias se hacen de manera aleatoria.
    
    6.2 Requerimientos minimos.

        6.2.1 Revision de requerimientos de software
        
            Estos son recorridos de todos los requisitos propuestos en presencia de todo el equipo y al menos un representante responsable del cliente. Serán dirigidos por el líder de requisitos, quien determinará su frecuencia y alcance.
        
        6.2.2 Inspección de diseño de arquitectura
        
            Dentro de la inspección s debe validar y verificar el software, bscando que se este haciendo el desarrollo correcto del mismo y ademas, que este este haiendo lo correcto en su gestión e implmentación.
        
            Estas se realizaran draante todo el ciclo de desarrollo del proyecto en busqueda de los defectos del mismo.
        
        6.2.3 Revisiones detalladas de diseño
        
            Esta revisión se hace en busqueda de fallos en la arquitecura diseñada y además en la implemntación de dicha arquitectura que este cmpliendo en todas las áreas de desarrollo del equipo de trabajo
        
        6.2.4 Plan de revisión de verificacion y validación

            Esta revisión, se llevará a cabo con un equipo externo a El proyecto durante todo el proyecto, vease el VP.

        6.2.5 Auditorias funcionales

            Estas auditorias, relacionadas con el cumplimiento de los requerimientos, serán llevadas a cabo por un equipo externo al proyecto.

        6.2.6 Auditorias fisicas

            Estas auditorias llevadas a cabo por el lider de QA se llevaran a cabo directamente sobre el código y su documentación antes de cada entrega.

        6.2.7 Auditorias en Proceso

            Estas auditorias serán llevadas a cabo por un equipo externo, se harán con frecuencia sobre todos los artefactos y se llevaran a cabo sin previo aviso.

        6.2.8 Revisiones gerenciales

            Especificado en el VP.

        6.2.10 Revisiones post-implementación

            Despues de cada entrega se realizará una revisión de los artefactos entregados, con el objetivo de recopilar datos para las metricas y realizar una retrolimentación para todo el equipo del proyecto.
    
6.3 Otras revisiones y Auditorias

    <<Intencionalmente dejado en blanco>>

7. Pruebas

    Las responsabilidades y tareas del equipo de pruebas se especifican en la sección 3. Los estandares de pruebas se encuentran en detalle en el STD.

8. Reporte de pruebas y acciones correctivas

    El equipo de pruebas usará GitLab para el reporte de defectos y errores.

    El formato de los tiquetes de reporte de defectos se muestran en el apendice A. 

    El nivel de prioridad por defecto se clasificará como sigue, por la opción de peso del tiquete:

        - 8-9 (Urgente): El defecto causa que el sistema se caiga, hay perdida de datos.
        - 6-7 (Alta): El defecto causa impedimentos en las funciones criticas del sistema y no existe una posible solución al fallo.
        - 4-5 (Media): El defecto causa impedimentos en las funciones criticas aunque hay una solución viable al fallo.
        - 2-3 (Baja): Causa inconvenientes o el fallo es molesto.
        - 0-1 (Niguno): Este nivel es utilizado cuando el fallo no se ha priorizado.
    
    Los defectos en la documentación serán etiquetados bajo alguna de las siguientes etiquetas:

        - Incorrecto: información incorrecta dentro del documento.
        - Material faltante: información flantante dentro del documento.
        - Impreciso: falta de detalle en especificaciones dentro del documento.
        - Ambiguo: información ambigua dentro del documento.
        - Incompleto: información incompleta dentro del documento.
        - Redundante (dentro del mismo o entre varios documentos): informarción equivalente o duplicada en el mismo documento, o entre varios documentos.
        - Contradictorio (dentro del mismo o entre varios documentos): contradicción en el mismo documento, o entre varios documentos.
        - Obsoleto: documento con información o estandares desactualizados.

    El flujo de un tiquete de defecto:

        1. Abierto: defecto encontrado por el tester.
        2. Assignado: defecto asignado a un desarrollador.
        3. En desarrollo: defecto siendo corregido por un desarrolladores.
        4. Pruebas: defecto en pruebas por el tester que lo abrió.
        5. Cerrado: defecto cerrado y corregido por el tester que lo abrió.

    Solo el miembro del equipo de pruebas que abra un tiquete de defecto puede cerrarlo. Esto es, una vez corregido el defecto por el equipo de desarrollo el tiquete debe de ser devuelto al miembro de pruebas que lo creó en primer lugar para que este lo pruebe y lo cierre. Cualquier defecto que no cumpla con este flujo será considerado como no corregido o en su defecto no será tomado como un defecto reportado por el equipo de pruebas.

    Todos los defectos reportados serán almacenados para alimentar las metricas mencionadas en la sección 5.

9. Herramientas, tecnicas y metodologias
    9.1 Herraientas

        Como lenguajes de programación: Python, C++, Rust

        Herramientas de diagramas UML: STARUML

        Herramientas de bases de datos: MYSQL o Postgres

        Herramientas de Casos de Uso: Jude

        Herramienta de procesamiento de texto: Microsoft Word

        Herramientas de apoyo: Internet, Excel, Photoshop.

        Herramientas de desarrollo: Visual Code.

        Herramienta de gestion de versionamiento: GitLab

    9.2 Técnicas

        Estándares de codificacion y UML descritos en sección 5.2.

        Programación en Pares.

10.Control de medios

    -Para realizar el procedimiento de alacenmiento de la información en discos extraibles, se debe hacer presente un miembro del área QA , el lìder del proyecto y un delegado del área a la que correpospede la información.

    - Para los discos extraibles se debe además sellar de tal manera en que diga cuando fue extraida la información que este contiene.

    -Se guardará la información en el cloud AZURE, en las ciudades de Sao Pablo, Ohio y París.

11.Control de proveedores

    Se envía al área de contabilidad los requerimientos de Hardware y de Licencias de los Sodtware para se realice la gestión y e debido seguimiento a los proveedores y su confiabilidad. 

12. Colección de registros y almacenamiento

    Se realiza la recolección de documentos como checklist en la Bodega 21-Sección A-Modulo 1020-Archivos Proyecto SVA.
    
    Se debe realizar una copia de cada documento antes de ser enviado a la Bodega y entregaro al jefe del área o al lider de proyecto para mantener evidencia en caso de perdida de los documentos almacenados en Bodega.

13.Entrenamiento

    En la siguiente tabla se listan las caacitaciones necesarias para el equipo de desarrollo

14.Administración de riesgos

    Es responsabilidad de SQA verificar que los proceso para migrar los riesgos definidos en el plan de riesgos y que estos sean seguidos al pie de la letra.
